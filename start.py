# –ü–æ—Ç—Ä—ñ–±–Ω—ñ –±—ñ–±—ñ–ª–æ—Ç–µ–∫–∏
import googletrans

from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart
from keyboards.default.language_reply_key import languages
from keyboards.inline.choi—Åes import dynamic_en_choice, dynamic_uk_choice, dynamic_it_choice, dynamic_inline_kb_uk, dynamic_inline_kb_it, dynamic_inline_kb_en

from loader import dp

translator = googletrans.Translator()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    # –í–∏–±—ñ—Ä –º–æ–≤–∏
    await message.answer("Choose your language / –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É / Scegli la tua lingua üó£", reply_markup=languages)


# –í–∏–±—ñ—Ä –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é
@dp.message_handler(text="English")
async def english_language(message: types.Message):
    await message.answer(text=f"Hi, {message.from_user.full_name} üëã!")
    await message.answer(f'''This bot will help you find a movieüçø
Enjoy the using!''')
    await message.answer("Choose an action‚§µÔ∏è",
                        reply_markup=dynamic_en_choice())

# –í–∏–±—ñ—Ä —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é
@dp.message_handler(text="–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞")
async def ukrainian_language(message: types.Message):
    start_menu_uk = translator.translate(f'''This bot will help you find a movieüçø
Enjoy the using!''', src='en', dest='uk')
    choice_uk = translator.translate("Choose an action‚§µÔ∏è", src='en', dest='uk')
    await message.answer(text=f"–ü—Ä–∏–≤—ñ—Ç, {message.from_user.full_name} üëã!")
    await message.answer(text=start_menu_uk.text)
    await message.answer(text=choice_uk.text, 
                        reply_markup=dynamic_uk_choice())

# –í–∏–±—ñ—Ä —ñ—Ç–∞–ª—ñ–π—Å—å–∫–æ—é
@dp.message_handler(text="Italiano")
async def italian_language(message: types.Message):
    start_menu_it = translator.translate(f'''This bot will help you find a movieüçø
Enjoy the using!''', src='en', dest='it')
    choice_it = translator.translate("Choose an action‚§µÔ∏è", src='en', dest='it')
    await message.answer(text=f"Ciao, {message.from_user.full_name} üëã!")
    await message.answer(text=start_menu_it.text)
    await message.answer(text=choice_it.text, 
                        reply_markup=dynamic_it_choice())


# –í–∏–±—ñ—Ä –∂–∞–Ω—Ä—ñ–≤ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é
@dp.callback_query_handler(lambda call: "en" in call.data)
async def english_language_genre(call: types.CallbackQuery):
    await call.message.edit_text(text='–°hoose a movie genreüé≠', 
                        reply_markup=dynamic_inline_kb_en())

# –í–∏–±—ñ—Ä –∂–∞–Ω—Ä—ñ–≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é
@dp.callback_query_handler(lambda call: "uk" in call.data)
async def ukrainian_language_genre(call: types.CallbackQuery):
    await call.message.edit_text(text='–û–±–µ—Ä—ñ—Ç—å –∂–∞–Ω—Ä —Ñ—ñ–ª—å–º—Éüé≠', 
                        reply_markup=dynamic_inline_kb_uk())

# –í–∏–±—ñ—Ä –∂–∞–Ω—Ä—ñ–≤ —ñ—Ç–∞–ª—ñ–π—Å—å–∫–æ—é
@dp.callback_query_handler(lambda call: "it" in call.data)
async def italian_language_genre(call: types.CallbackQuery):
    await call.message.edit_text(text='Seleziona un genere di filmüé≠', 
                        reply_markup=dynamic_inline_kb_it())